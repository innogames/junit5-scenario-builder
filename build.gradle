import java.util.regex.Pattern
import org.gradle.util.internal.VersionNumber

plugins {
	id 'java-library'
	id 'maven-publish'
	id 'me.qoomon.git-versioning' version '5.1.1'
}

group 'com.innogames'
version '0.0.0-SNAPSHOT'

def setVersionFromGit() {
	// Set project version based on git branch or tag using the git-versioning plugin
	gitVersioning.apply {
		refs {
			branch('.+') {
				describeTagPattern = Pattern.compile('v(?<version>.*)')
				version = '${describe.tag.version:-0.0.0}-SNAPSHOT'
			}
			tag('v(?<version>.*)') {
				version = '${ref.version}'
			}
		}
	}

	// Use the next minor version if the determined version is a SNAPSHOT version
	VersionNumber current = VersionNumber.parse(project.version)
	if (current.qualifier == 'SNAPSHOT') {
		logger.info('Found SNAPSHOT version. Increase minor version')
		def newVersion = new VersionNumber(current.major, current.minor + 1, 0, current.qualifier)
		project.setVersion(newVersion.toString())
	}

	logger.info("-------------------------------------------")
	logger.info("Current project version: ${project.version}")
	logger.info("-------------------------------------------")
}

setVersionFromGit()

repositories {
	mavenCentral()
}

dependencies {
	def junitVersion = '5.8.1'

	compileOnly "org.junit.jupiter:junit-jupiter-api:$junitVersion"

	testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
	testImplementation "org.mockito:mockito-core:4.0.0"
}

test {
	useJUnitPlatform()
}

java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			pom {
				name = project.name
				description = 'Junit5 extension that introduces a Scenario Builder to your tests'
				url = 'https://github.com/innogames/junit5-scenario-builder'
				licenses {
					license {
						name = 'MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				developers {
					developer {
						name = 'Christian Blos'
						email = 'christian.blos@innogames.com'
						organization = 'InnoGames GmbH'
						organizationUrl = 'https://www.innogames.com/'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/innogames/junit5-scenario-builder.git'
					developerConnection = 'scm:git:ssh://github.com:innogames/junit5-scenario-builder.git'
					url = 'https://github.com/innogames/junit5-scenario-builder'
				}
			}
		}
	}

	repositories {
		maven {
			def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
			def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}
